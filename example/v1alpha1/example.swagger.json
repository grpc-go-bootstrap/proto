{
  "swagger": "2.0",
  "info": {
    "title": "Example API",
    "version": "1.0-alpha1"
  },
  "tags": [
    {
      "name": "ExampleService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1alpha1/example": {
      "get": {
        "summary": "ExampleGet",
        "description": "Sets up a GET endpoint",
        "operationId": "ExampleGet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ExampleGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ExampleService"
        ]
      },
      "post": {
        "summary": "ExamplePost",
        "description": "Sets up a POST endpoint",
        "operationId": "ExamplePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ExamplePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The example to add",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Example"
            }
          }
        ],
        "tags": [
          "ExampleService"
        ]
      }
    },
    "/v1alpha1/example/{id}": {
      "delete": {
        "summary": "ExampleDelete",
        "description": "Sets up a DELETE endpoint",
        "operationId": "ExampleDelete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ExampleDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The unique identifier of the change.",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "ExampleService"
        ]
      }
    },
    "/v1alpha1/heartbeat": {
      "get": {
        "summary": "Heartbeat",
        "description": "Provides information about the service health",
        "operationId": "Heartbeat",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1HeartbeatResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "ExampleService"
        ]
      }
    }
  },
  "definitions": {
    "ExampleGender": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "MALE",
        "FEMALE"
      ],
      "default": "UNSPECIFIED"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1Example": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The unique identifier of the example.",
          "readOnly": true
        },
        "gender": {
          "$ref": "#/definitions/ExampleGender",
          "title": "The gender of the example"
        },
        "purchase_date": {
          "type": "string",
          "title": "The date of purchase of the example"
        }
      }
    },
    "v1alpha1ExampleDeleteResponse": {
      "type": "object",
      "properties": {
        "example": {
          "$ref": "#/definitions/v1alpha1Example",
          "title": "The deleted example"
        }
      }
    },
    "v1alpha1ExampleGetResponse": {
      "type": "object",
      "properties": {
        "example": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Example"
          },
          "title": "The list of example"
        }
      }
    },
    "v1alpha1ExamplePostResponse": {
      "type": "object",
      "properties": {
        "example": {
          "$ref": "#/definitions/v1alpha1Example",
          "title": "The added example"
        }
      }
    },
    "v1alpha1HeartbeatResponse": {
      "type": "object"
    }
  }
}
